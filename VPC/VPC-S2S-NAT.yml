AWSTemplateFormatVersion: "2010-09-09"
Description: ""

Parameters:
  CidrBlockVPC:
   Description: example 10.0.0.0/16 
   Type: String
   Default: 172.25.180.0/19
   MinLength: '10'
   MaxLength: '18'
   AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  EC2Subnet1Cidr:
   Description: example 10.0.0.0/16 
   Default: 172.25.180.0/26
   Type: String
   MinLength: '10'
   MaxLength: '18'
   AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  EC2Subnet2Cidr:
   Description: example 10.0.0.0/16 
   Default: 172.25.180.64/26
   Type: String
   MinLength: '10'
   MaxLength: '18'
   AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  EC2Subnet3Cidr:
   Description: example 10.0.0.0/16 
   Default: 172.25.180.128/26
   Type: String
   MinLength: '10'
   MaxLength: '18'
   AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  EC2Subnet4Cidr:
   Description: example 10.0.0.0/16 
   Default: 172.25.180.192/26
   Type: String
   MinLength: '10'
   MaxLength: '18'
   AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  EC2Subnet5Cidr:
   Description: example 10.0.0.0/16 
   Default: 172.25.181.0/26
   Type: String
   MinLength: '10'
   MaxLength: '18'
   AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  EC2Subnet6Cidr:
   Description: example 10.0.0.0/16 
   Default: 172.25.181.64/26
   Type: String
   MinLength: '10'
   MaxLength: '18'
   AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  EC2Subnet7Cidr:
   Description: example 10.0.0.0/16 
   Default: 172.25.181.128/26
   Type: String
   MinLength: '10'
   MaxLength: '18'
   AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  EC2Subnet8Cidr:
   Description: example 10.0.0.0/16 
   Default: 172.25.181.192/26
   Type: String
   MinLength: '10'
   MaxLength: '18'
   AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  FirewallPublicIP:
    Description: Public IP of the Firewall 
    Type: String


Resources:
    EC2EIP:
        Type: "AWS::EC2::EIP"
        Properties:
            Domain: "vpc"

    EC2VPC:
        Type: "AWS::EC2::VPC"
        Properties:
            CidrBlock: !Ref CidrBlockVPC
            EnableDnsSupport: true
            EnableDnsHostnames: false
            InstanceTenancy: "default"
            

    EC2Subnet:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Subnet3.AvailabilityZone
            CidrBlock: !Ref EC2Subnet1Cidr
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false

    EC2Subnet2:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Subnet6.AvailabilityZone
            CidrBlock: !Ref EC2Subnet2Cidr
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false

    EC2Subnet3:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Subnet4.AvailabilityZone
            CidrBlock: !Ref EC2Subnet3Cidr
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false

    EC2Subnet4:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Subnet5.AvailabilityZone
            CidrBlock: !Ref EC2Subnet4Cidr
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false

    EC2Subnet5:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !Sub "${AWS::Region}a"
            CidrBlock: !Ref EC2Subnet5Cidr
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false

    EC2Subnet6:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Subnet7.AvailabilityZone
            CidrBlock: !Ref EC2Subnet6Cidr
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false

    EC2Subnet7:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !GetAtt EC2Subnet8.AvailabilityZone
            CidrBlock: !Ref EC2Subnet7Cidr
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false

    EC2Subnet8:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !Sub "${AWS::Region}b"
            CidrBlock: !Ref EC2Subnet8Cidr
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false
            Tags: 
              - 
                Key: "name"
                Value: "CTestVPC"
              - 
                Key: "Name"
                Value: "s7External"

    EC2NetworkAcl:
        Type: "AWS::EC2::NetworkAcl"
        Properties:
            VpcId: !Ref EC2VPC
            Tags: 
              - 
                Key: "Name"
                Value: "CTestVPC"
              

    EC2RouteTable:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref EC2VPC
            Tags: 
              - 
                Key: "Name"
                Value: "NATRouter"

    EC2RouteTable2:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref EC2VPC
            Tags: 
              - 
                Key: "Name"
                Value: "AWS-To-DC-RouteTable"

    EC2RouteTable3:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref EC2VPC
            Tags: 
              - 
                Key: "Name"
                Value: "PrimaryRoute"
              

    EC2VPCGatewayAttachment:
        Type: "AWS::EC2::VPCGatewayAttachment"
        Properties:
            VpnGatewayId: !Ref EC2VPNGateway
            VpcId: !Ref EC2VPC

    EC2VPCGatewayAttachment2:
        Type: "AWS::EC2::VPCGatewayAttachment"
        Properties:
            InternetGatewayId: !Ref EC2InternetGateway
            VpcId: !Ref EC2VPC

    EC2NatGateway:
        Type: "AWS::EC2::NatGateway"
        Properties:
            SubnetId: !Ref EC2Subnet
            AllocationId: !GetAtt EC2EIP.AllocationId

    

    EC2SubnetNetworkAclAssociation:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId: !Ref EC2Subnet5
            NetworkAclId: !Ref EC2NetworkAcl

    EC2SubnetNetworkAclAssociation2:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId: !Ref EC2Subnet3
            NetworkAclId: !Ref EC2NetworkAcl

    EC2SubnetNetworkAclAssociation3:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId: !Ref EC2Subnet8
            NetworkAclId: !Ref EC2NetworkAcl

    EC2SubnetNetworkAclAssociation4:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId: !Ref EC2Subnet2
            NetworkAclId: !Ref EC2NetworkAcl

    EC2SubnetNetworkAclAssociation5:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId: !Ref EC2Subnet
            NetworkAclId: !Ref EC2NetworkAcl

    EC2SubnetNetworkAclAssociation6:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId: !Ref EC2Subnet7
            NetworkAclId: !Ref EC2NetworkAcl

    EC2SubnetNetworkAclAssociation7:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId: !Ref EC2Subnet4
            NetworkAclId: !Ref EC2NetworkAcl

    EC2SubnetNetworkAclAssociation8:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId: !Ref EC2Subnet6
            NetworkAclId: !Ref EC2NetworkAcl

    EC2SubnetRouteTableAssociation:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            RouteTableId: !Ref EC2RouteTable
            SubnetId: !Ref EC2Subnet

    EC2SubnetRouteTableAssociation2:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            RouteTableId: !Ref EC2RouteTable
            SubnetId: !Ref EC2Subnet2

    EC2InternetGateway:
        Type: "AWS::EC2::InternetGateway"
            

    EC2Route:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: "0.0.0.0/0"
            GatewayId: !Ref EC2InternetGateway
            RouteTableId: !Ref EC2RouteTable

    EC2CustomerGateway:
        Type: "AWS::EC2::CustomerGateway"
        Properties:
            BgpAsn: 65000
            IpAddress: !Ref FirewallPublicIP
            Type: "ipsec.1"
            Tags: 
              - 
                Key: "Name"
                Value: "Spaces"

    EC2VPNConnection:
        Type: "AWS::EC2::VPNConnection"
        Properties:
            Type: "ipsec.1"
            StaticRoutesOnly: true
            CustomerGatewayId: !Ref EC2CustomerGateway
            VpnGatewayId: !Ref EC2VPNGateway
            Tags: 
              - 
                Key: "Name"
                Value: "VPNToDc"

    EC2VPNGateway:
        Type: "AWS::EC2::VPNGateway"
        Properties:
            AmazonSideAsn: 7224
            Type: "ipsec.1"
            Tags: 
              - 
                Key: "Name"
                Value: !Sub "${EC2VPC} | TestVPC"

    EC2VPNConnectionRoute:
        Type: "AWS::EC2::VPNConnectionRoute"
        Properties:
            VpnConnectionId: !Ref EC2VPNConnection
            DestinationCidrBlock: "10.0.0.0/8"

    EC2Route2:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: "172.0.0.0/8"
            NatGatewayId: !Ref EC2NatGateway
            RouteTableId: !Ref EC2RouteTable3

    EC2Route3:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: "192.0.0.0/8"
            NatGatewayId: !Ref EC2NatGateway
            RouteTableId: !Ref EC2RouteTable3

    EC2Route4:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: "10.0.0.0/8"
            NatGatewayId: !Ref EC2NatGateway
            RouteTableId: !Ref EC2RouteTable3

    EC2Route5:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: "0.0.0.0/0"
            NatGatewayId: !Ref EC2NatGateway
            RouteTableId: !Ref EC2RouteTable3

